# ------------------------------------------------------------

# diosix - microkernel makefile
# Maintainer(s): Chris Williams (diodesign)
 
# For x86-64 PC machines 

# Expects the build system to define the following:
# BUILD_ARCH, BUILD_HARDWARE, BUILD_FEATURES, KERNEL_RELEASE_MAJOR,
# KERNEL_RELEASE_MINOR, KERNEL_CODENAME, KERNEL_API_REVISION
# BUILD_CC, BUILD_LINKER, BUILD_OBJDUMP, BUILD_STRIP
# BUILD_READELF, BUILD_ASM, BUILD_TIMESTAMP, BUILD_REVISION
# BUILD_OBJS_DIR, BUILD_HARDWARE_SRC_DIR, BUILD_MAKEFILE,
# BUILD_LINKERFILE
# ------------------------------------------------------------

# define the build version
VERSION		= -DKERNEL_IDENTIFIER="\"diosix-$(KERNEL_CODENAME) ($(BUILD_TIMESTAMP) $(BUILD_REVISION)) " \
		  "$(BUILD_ARCH)_$(BUILD_HARDWARE) $(BUILD_FEATURES)\"" \
		  -DKERNEL_RELEASE_MAJOR=$(KERNEL_RELEASE_MAJOR) -DKERNEL_RELEASE_MINOR=$(KERNEL_RELEASE_MINOR) \
		  -DKERNEL_API_REVISION=$(KERNEL_API_REVISION)

# prettify the output
Q=@
WRITE 		= $(Q)echo 

.SUFFIXES: .s .c

# define our clang, linker and nasm flags
CC_FLAGS	= -m64 \
		  -ffreestanding -mcmodel=large \
		  -mno-red-zone	-mno-mmx -mno-sse \
		  -mno-sse2 -mno-sse3 -mno-3dnow
LINK_FLAGS	= -nodefaultlibs -T$(BUILD_LINKERFILE) \
		  -z max-page-size=0x1000
ASM_FLAGS	= -felf64

# get our build executables all lined up
CC		= $(Q)$(BUILD_CC) $(CC_FLAGS)
LINK 		= $(Q)$(BUILD_LINKER) $(LINK_FLAGS)
ASM		= $(Q)$(BUILD_ASM) $(ASM_FLAGS)

# the actual components in the microkernel
OBJS		= $(BUILD_OBJS_DIR)/start.o $(BUILD_OBJS_DIR)/boot.o

# targets
all: kernel

# standard cmd lines
BUILD.s		= $(ASM) $< -o $@
BUILD.c		= $(CC) -c $< -MD -MT $@ -MF $(@:%o=%d) -o $@

# per-source rules
$(BUILD_OBJS_DIR)/start.o:	$(BUILD_HARDWARE_SRC_DIR)/start.s
				$(WRITE) '==> ASSEMBLE: $<'
				$(BUILD.s)

$(BUILD_OBJS_DIR)/boot.o:	$(BUILD_HARDWARE_SRC_DIR)/boot.c
				$(WRITE) '==> COMPILE: $<'
				$(BUILD.c)

# explicit rules

.EXPORT_ALL_VARIABLES: ;

# link the kernel
kernel: $(OBJS) $(BUILD_LINKERFILE) $(BUILD_MAKEFILE)
	$(WRITE) '==> LINK: $<'
	$(LINK) $(LINK_FLAGS) $(OBJS) -o $(BUILD_OBJS_DIR)/$@
